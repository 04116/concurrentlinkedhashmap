#summary A comparision of the performance of different caching implementations.

=Test Description=
JBoss's [https://www.jboss.org/community/docs/DOC-9241 Cache Benchmark Framework] was used to compare the performance of the ConcurrentLinkedHashMap with other caching libraries.

For more details on JBoss's, see their [https://www.jboss.org/community/docs/DOC-10272 MVCC cache] and the [http://jbosscache.blogspot.com/2008/09/naga-beta1-ready-to-rock-and-roll.html announcement] of their caching data structure.

===Machine Specifications===
 * CentOS
 * 7.5 GB memory
 * 4 EC2 Compute Units (2 virtual cores with 2 EC2 Compute Units each)
 * 850 GB instance storage (2Ã—420 GB plus 10 GB root partition)
 * 64-bit platform

===Parameters===
 * JDK 1.6_04 running with 4GB heap
 * 5,000,000 sample size
 * 25 threads
 * 20% writes

=Test #1: Capacity = 5,000===
[http://concurrentlinkedhashmap.googlecode.com/svn/wiki/images/5000/LocalMode-java5-GetChart.png]

[http://concurrentlinkedhashmap.googlecode.com/svn/wiki/images/5000/LocalMode-java5-PutChart.png]

=Test #2: Capacity = 50,000===
[http://concurrentlinkedhashmap.googlecode.com/svn/wiki/images/50000/LocalMode-java5-GetChart.png]

[http://concurrentlinkedhashmap.googlecode.com/svn/wiki/images/50000/LocalMode-java5-PutChart.png]

=Test #3: Capacity = 500,000===
[http://concurrentlinkedhashmap.googlecode.com/svn/wiki/images/500000/LocalMode-java5-GetChart.png]

[http://concurrentlinkedhashmap.googlecode.com/svn/wiki/images/500000/LocalMode-java5-PutChart.png]